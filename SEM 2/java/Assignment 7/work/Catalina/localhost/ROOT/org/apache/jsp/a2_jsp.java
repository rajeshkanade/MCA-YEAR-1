/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.76
 * Generated at: 2025-04-07 07:37:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class a2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("  <head>\n");
      out.write("    <title>Color Selection</title>\n");
      out.write("    <style>\n");
      out.write("      body {\n");
      out.write("        font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("        background-color: #f8f9fa;\n");
      out.write("        margin: 0;\n");
      out.write("        padding: 20px;\n");
      out.write("        display: flex;\n");
      out.write("        flex-direction: column;\n");
      out.write("        align-items: center;\n");
      out.write("        min-height: 100vh;\n");
      out.write("      }\n");
      out.write("      .container {\n");
      out.write("        max-width: 800px;\n");
      out.write("        width: 100%;\n");
      out.write("        text-align: center;\n");
      out.write("      }\n");
      out.write("      h1 {\n");
      out.write("        color: #343a40;\n");
      out.write("        margin-bottom: 30px;\n");
      out.write("        font-size: 2.5rem;\n");
      out.write("        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n");
      out.write("      }\n");
      out.write("      .color-grid {\n");
      out.write("        width: 100%;\n");
      out.write("        display: grid;\n");
      out.write("        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n");
      out.write("        gap: 20px;\n");
      out.write("        justify-items: center;\n");
      out.write("      }\n");
      out.write("      .color-box {\n");
      out.write("        width: 150px;\n");
      out.write("        height: 150px;\n");
      out.write("        border-radius: 10px;\n");
      out.write("        display: flex;\n");
      out.write("        align-items: center;\n");
      out.write("        justify-content: center;\n");
      out.write("        color: white;\n");
      out.write("        font-weight: bold;\n");
      out.write("        font-size: 1.2rem;\n");
      out.write("        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n");
      out.write("        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n");
      out.write("        transition: all 0.3s ease;\n");
      out.write("        cursor: pointer;\n");
      out.write("        text-decoration: none;\n");
      out.write("      }\n");
      out.write("      .color-box:hover {\n");
      out.write("        transform: translateY(-5px);\n");
      out.write("        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n");
      out.write("      }\n");
      out.write("      .red {\n");
      out.write("        background-color: #e63946;\n");
      out.write("      }\n");
      out.write("      .blue {\n");
      out.write("        background-color: #1d3557;\n");
      out.write("      }\n");
      out.write("      .green {\n");
      out.write("        background-color: #2a9d8f;\n");
      out.write("      }\n");
      out.write("      .yellow {\n");
      out.write("        background-color: #e9c46a;\n");
      out.write("        color: #333;\n");
      out.write("        text-shadow: none;\n");
      out.write("      }\n");
      out.write("      .purple {\n");
      out.write("        background-color: #6a4c93;\n");
      out.write("      }\n");
      out.write("    </style>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <h1>Choose Your Favorite Color</h1>\n");
      out.write("\n");
      out.write("      <div class=\"color-grid\">\n");
      out.write("        <a href=\"colorDisplay.jsp?color=red\" class=\"color-box red\">Red</a>\n");
      out.write("        <a href=\"colorDisplay.jsp?color=blue\" class=\"color-box blue\">Blue</a>\n");
      out.write("        <a href=\"colorDisplay.jsp?color=green\" class=\"color-box green\">Green</a>\n");
      out.write("        <a href=\"colorDisplay.jsp?color=yellow\" class=\"color-box yellow\"\n");
      out.write("          >Yellow</a\n");
      out.write("        >\n");
      out.write("        <a href=\"colorDisplay.jsp?color=purple\" class=\"color-box purple\"\n");
      out.write("          >Purple</a\n");
      out.write("        >\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
